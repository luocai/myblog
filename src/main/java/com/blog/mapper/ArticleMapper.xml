<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.mapper.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.blog.pojo.Article">
    <id column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="article_title" jdbcType="VARCHAR" property="articleTitle" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="writer_id" jdbcType="INTEGER" property="writerId" />
    <result column="category" jdbcType="INTEGER" property="category" />
    <result column="click" jdbcType="INTEGER" property="click" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.blog.pojo.ArticleWithBLOBs">
    <result column="article_content" jdbcType="LONGVARCHAR" property="articleContent" />
    <result column="summary" jdbcType="LONGVARCHAR" property="summary" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    article_id, article_title, publish_time, writer_id, category, click, state, cover
  </sql>
  <sql id="Blob_Column_List">
    article_content, summary
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.blog.pojo.ArticleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.blog.pojo.ArticleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
     ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where article_id = #{articleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where article_id = #{articleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.blog.pojo.ArticleExample">
    delete from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.blog.pojo.ArticleWithBLOBs">
    insert into article (article_id, article_title, publish_time, 
      writer_id, category, click, 
      state, cover, article_content, 
      summary)
    values (#{articleId,jdbcType=INTEGER}, #{articleTitle,jdbcType=VARCHAR}, #{publishTime,jdbcType=TIMESTAMP}, 
      #{writerId,jdbcType=INTEGER}, #{category,jdbcType=INTEGER}, #{click,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{cover,jdbcType=VARCHAR}, #{articleContent,jdbcType=LONGVARCHAR}, 
      #{summary,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blog.pojo.ArticleWithBLOBs">
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        article_id,
      </if>
      <if test="articleTitle != null">
        article_title,
      </if>
      <if test="publishTime != null">
        publish_time,
      </if>
      <if test="writerId != null">
        writer_id,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="click != null">
        click,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="articleContent != null">
        article_content,
      </if>
      <if test="summary != null">
        summary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null">
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="writerId != null">
        #{writerId,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        #{category,jdbcType=INTEGER},
      </if>
      <if test="click != null">
        #{click,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="articleContent != null">
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.blog.pojo.ArticleExample" resultType="java.lang.Long">
    select count(*) from article
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article
    <set>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=INTEGER},
      </if>
      <if test="record.articleTitle != null">
        article_title = #{record.articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.publishTime != null">
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.writerId != null">
        writer_id = #{record.writerId,jdbcType=INTEGER},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=INTEGER},
      </if>
      <if test="record.click != null">
        click = #{record.click,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.cover != null">
        cover = #{record.cover,jdbcType=VARCHAR},
      </if>
      <if test="record.articleContent != null">
        article_content = #{record.articleContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update article
    set article_id = #{record.articleId,jdbcType=INTEGER},
      article_title = #{record.articleTitle,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      writer_id = #{record.writerId,jdbcType=INTEGER},
      category = #{record.category,jdbcType=INTEGER},
      click = #{record.click,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      cover = #{record.cover,jdbcType=VARCHAR},
      article_content = #{record.articleContent,jdbcType=LONGVARCHAR},
      summary = #{record.summary,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article
    set article_id = #{record.articleId,jdbcType=INTEGER},
      article_title = #{record.articleTitle,jdbcType=VARCHAR},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      writer_id = #{record.writerId,jdbcType=INTEGER},
      category = #{record.category,jdbcType=INTEGER},
      click = #{record.click,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      cover = #{record.cover,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.pojo.ArticleWithBLOBs">
    update article
    <set>
      <if test="articleTitle != null">
        article_title = #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null">
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="writerId != null">
        writer_id = #{writerId,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="click != null">
        click = #{click,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="articleContent != null">
        article_content = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blog.pojo.ArticleWithBLOBs">
    update article
    set article_title = #{articleTitle,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      writer_id = #{writerId,jdbcType=INTEGER},
      category = #{category,jdbcType=INTEGER},
      click = #{click,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      cover = #{cover,jdbcType=VARCHAR},
      article_content = #{articleContent,jdbcType=LONGVARCHAR},
      summary = #{summary,jdbcType=LONGVARCHAR}
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.pojo.Article">
    update article
    set article_title = #{articleTitle,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      writer_id = #{writerId,jdbcType=INTEGER},
      category = #{category,jdbcType=INTEGER},
      click = #{click,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      cover = #{cover,jdbcType=VARCHAR}
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  
   <select id="selectAll" resultMap="BaseResultMap">
  		select
  		<include refid="Base_Column_List" />
  		,
   		<include refid="Blob_Column_List" />
  		from article
  		where state = 1
  		ORDER BY article_id desc
  	</select>
  	
  	<select id="selectLastArticle" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    article_id,article_title
    from article
    where state = 1 and article_id = (select MIN(article_id) from article where article_id &gt; #{id} order by article_id desc);
  </select>

  <select id="selectNextArticle" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    article_id,article_title
    from article
    where state = 1 and article_id = (select MAX(article_id) from article where article_id &lt; #{id} order by article_id ASC);

  </select>
  
  <select id="selectHotArticle" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List"></include>
  	from article
  	where state = 1
  	ORDER BY click  desc
  	limit 0, 3
  </select>
</mapper>